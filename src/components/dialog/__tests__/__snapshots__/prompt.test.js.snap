// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Prompt Component basic render defaultValue 1`] = `
<Motion.ScaleFadeIn
  animationConfig={
    Object {
      "delay": 0,
      "duration": 250,
      "isInteraction": true,
      "useNativeDriver": true,
    }
  }
  finalScale={0}
  height={null}
  hideDuration={250}
  initScale={0.5}
  isAlign={true}
  onHide={[Function]}
  onShow={[Function]}
  show={true}
  showDuration={250}
  style={null}
  width={null}
>
  <Prompt
    cancelAccessibilityLabel="Dialog.Cancel"
    cancelText="取消"
    cancelTextStyle={null}
    confirmAccessibilityLabel="Dialog.Confirm"
    confirmText="确认"
    confirmTextStyle={null}
    contentStyle={null}
    defaultValue=""
    footerWrapperStyle={null}
    inputStyle={null}
    inputWrapperStyle={null}
    motionConfig={
      Object {
        "initScale": 0.5,
      }
    }
    motionType="ScaleFadeIn"
    onCancel={[Function]}
    onConfirm={[Function]}
    onHelpPress={null}
    placeholder="Password"
    showHelp={false}
    style={null}
    subTitle="副标题"
    subTitleStyle={null}
    textContentType=""
    title="标题"
    titleNumberOfLines={2}
    titleStyle={null}
  />
</Motion.ScaleFadeIn>
`;

exports[`Prompt Component basic render value 1`] = `
<View
  renderToHardwareTextureAndroid={false}
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "opacity": 0,
      "transform": Array [
        Object {
          "scale": 0.5,
        },
      ],
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#fff",
          "borderRadius": 16,
          "justifyContent": "center",
          "width": 630,
        },
        null,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "justifyContent": "center",
            "paddingBottom": 32,
            "paddingLeft": 32,
            "paddingRight": 32,
            "paddingTop": 32,
          },
          null,
        ]
      }
    >
      <Text
        accessible={true}
        align={null}
        allowFontScaling={false}
        color={null}
        ellipsizeMode="tail"
        numberOfLines={2}
        size={18}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#333",
              "fontSize": 18,
            },
            Array [
              Object {
                "color": "#333",
                "fontSize": 18,
                "fontWeight": "500",
                "textAlign": "center",
              },
              null,
            ],
          ]
        }
        type={null}
        weight={null}
      >
        标题
      </Text>
      <Text
        accessible={true}
        align={null}
        allowFontScaling={false}
        color={null}
        ellipsizeMode="tail"
        size={16}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#333",
              "fontSize": 16,
            },
            Array [
              Object {
                "color": "#999",
                "fontSize": 16,
                "marginTop": 7,
                "textAlign": "center",
              },
              null,
            ],
          ]
        }
        type={null}
        weight={null}
      >
        副标题
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#f8f8f8",
              "borderColor": "#e5e5e5",
              "borderRadius": 8,
              "borderWidth": 0.5,
              "justifyContent": "center",
              "marginTop": 16,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
            null,
          ]
        }
      >
        <TextInput
          allowFontScaling={true}
          motionConfig={
            Object {
              "initScale": 0.5,
            }
          }
          motionType="ScaleFadeIn"
          onChangeText={[Function]}
          onConfirm={[Function]}
          placeholder="Password"
          placeholderTextColor="#d6d6de"
          style={
            Array [
              Object {
                "color": "#333",
                "fontSize": 16,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
              null,
            ]
          }
          textContentType=""
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
              "position": "absolute",
              "right": 12,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                Object {
                  "height": 17,
                  "width": 17,
                },
                false,
                null,
              ]
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  undefined,
                  false,
                  Object {
                    "flex": 0,
                    "height": 17,
                    "width": 17,
                  },
                ]
              }
              vbHeight={1024}
              vbWidth={1024}
            >
              <RNSVGPath
                d="M512 0c282.7776 0 512 229.2224 512 512s-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0z m0 768a51.2 51.2 0 1 0 0 102.4 51.2 51.2 0 0 0 0-102.4z m0-563.2a204.8 204.8 0 0 0-204.8 204.8 51.2 51.2 0 1 0 102.4 0 102.4 102.4 0 1 1 102.4 102.4l-5.9904 0.3584A51.2 51.2 0 0 0 460.8 563.2v102.4l0.3584 5.9904A51.2 51.2 0 0 0 512 716.8l5.9904-0.3584A51.2 51.2 0 0 0 563.2 665.6v-57.7024l7.936-2.1504A204.9024 204.9024 0 0 0 512 204.8z"
                fill={
                  Array [
                    0,
                    0.7098039215686275,
                    0.7098039215686275,
                    0.7098039215686275,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                    "fill",
                  ]
                }
                stroke={
                  Array [
                    0,
                    0.7098039215686275,
                    0.7098039215686275,
                    0.7098039215686275,
                    1,
                  ]
                }
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
              />
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "borderTopColor": "#e5e5e5",
            "borderTopWidth": 0.5,
            "flexDirection": "row",
            "height": 56,
          },
          null,
        ]
      }
    >
      <View
        accessibilityLabel="Dialog.Cancel"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRightColor": "#e5e5e5",
            "borderRightWidth": 0.5,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          size={16}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "#666",
                  "fontSize": 16,
                  "textAlign": "center",
                },
                null,
              ],
            ]
          }
          type={null}
          weight={null}
        >
          取消
        </Text>
      </View>
      <View
        accessibilityLabel="Dialog.Confirm"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRightColor": "#e5e5e5",
            "borderRightWidth": 0,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Text
          accessible={true}
          align={null}
          allowFontScaling={false}
          color={null}
          ellipsizeMode="tail"
          size={16}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#333",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "#333",
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                },
                Array [
                  Object {
                    "opacity": 0.4,
                  },
                  null,
                ],
              ],
            ]
          }
          type={null}
          weight={null}
        >
          确认
        </Text>
      </View>
    </View>
  </View>
</View>
`;
