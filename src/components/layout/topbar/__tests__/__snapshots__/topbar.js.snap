// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TopBar Component basic render 1`] = `
<View
  style={
    Array [
      null,
      Object {
        "height": 88,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "space-between",
        "marginTop": 44,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingLeft": 12,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "marginRight": 4,
              "tintColor": "#fff",
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                ],
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingRight": 12,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "marginLeft": 4,
              "tintColor": "#fff",
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`TopBar Component basic render 2`] = `
<View
  style={
    Array [
      null,
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "space-between",
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "overflow": "hidden",
          "paddingLeft": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginRight": 10,
            "tintColor": "#fff",
            "width": 16,
          }
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "marginRight": 20,
            },
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 16,
              },
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontSize": 18,
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "height": 56,
          "justifyContent": "center",
          "width": 610,
        },
        Object {},
        false,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontSize": 18,
            },
            null,
          ],
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "center",
          "overflow": "hidden",
          "paddingRight": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginLeft": 10,
            "tintColor": "#fff",
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`TopBar Component should render only with centerText 1`] = `
<View
  style={
    Array [
      null,
      Object {
        "height": 88,
      },
    ]
  }
>
  <View
    pointerEvents="none"
    style={
      Object {
        "alignItems": "center",
        "height": 44,
        "justifyContent": "center",
        "left": 70,
        "position": "absolute",
        "right": 70,
        "top": 44,
        "width": 610,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontSize": 16,
            },
            null,
          ],
        ]
      }
    >
      Title
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "space-between",
        "marginTop": 44,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingLeft": 12,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "marginRight": 4,
              "tintColor": "#fff",
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                ],
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingRight": 12,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "marginLeft": 4,
              "tintColor": "#fff",
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`TopBar Component should render only with centerText 2`] = `
<View
  style={
    Array [
      null,
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "space-between",
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "overflow": "hidden",
          "paddingLeft": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginRight": 10,
            "tintColor": "#fff",
            "width": 16,
          }
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "marginRight": 20,
            },
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 16,
              },
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontSize": 18,
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "height": 56,
          "justifyContent": "center",
          "width": 610,
        },
        Object {},
        false,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontSize": 18,
            },
            null,
          ],
        ]
      }
    >
      Title
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "center",
          "overflow": "hidden",
          "paddingRight": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginLeft": 10,
            "tintColor": "#fff",
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`TopBar Component should render only with leftImage 1`] = `
<View
  style={
    Array [
      null,
      Object {
        "height": 88,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "space-between",
        "marginTop": 44,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingLeft": 12,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "marginRight": 4,
              "tintColor": "#fff",
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingRight": 12,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "marginLeft": 4,
              "tintColor": "#fff",
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`TopBar Component should render only with leftImage 2`] = `
<View
  style={
    Array [
      null,
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "space-between",
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "overflow": "hidden",
          "paddingLeft": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginRight": 10,
            "tintColor": "#fff",
            "width": 16,
          }
        }
      />
    </View>
  </View>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "height": 56,
          "justifyContent": "center",
          "width": 610,
        },
        Object {},
        false,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontSize": 18,
            },
            null,
          ],
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "center",
          "overflow": "hidden",
          "paddingRight": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginLeft": 10,
            "tintColor": "#fff",
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`TopBar Component should render with rightImage and rightText 1`] = `
<View
  style={
    Array [
      null,
      Object {
        "height": 88,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "space-between",
        "marginTop": 44,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingLeft": 12,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "marginRight": 4,
              "tintColor": "#fff",
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 16,
                  },
                ],
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "overflow": "hidden",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Object {
                  "backgroundColor": "transparent",
                  "color": "#fff",
                  "fontSize": 16,
                },
              ]
            }
          >
            Back
          </Text>
        </View>
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "marginLeft": 4,
              "tintColor": "#fff",
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`TopBar Component should render with rightImage and rightText 2`] = `
<View
  style={
    Array [
      null,
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "space-between",
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "overflow": "hidden",
          "paddingLeft": 20,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginRight": 10,
            "tintColor": "#fff",
            "width": 16,
          }
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "marginRight": 20,
            },
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 16,
              },
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontSize": 18,
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "height": 56,
          "justifyContent": "center",
          "width": 610,
        },
        Object {},
        false,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontSize": 18,
            },
            null,
          ],
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "center",
          "overflow": "hidden",
          "paddingRight": 20,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "marginLeft": 20,
            },
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 16,
              },
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontSize": 18,
              },
            ]
          }
        >
          Back
        </Text>
      </View>
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "marginLeft": 10,
            "tintColor": "#fff",
          }
        }
      />
    </View>
  </View>
</View>
`;
