// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lists Component basic render 1`] = `
<RCTScrollView
  ItemSeparatorComponent={undefined}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "Icon": <Image
              source={1}
              style={Object {}}
            />,
            "onPress": [MockFunction],
            "styles": Object {
              "container": Object {
                "height": 64,
              },
              "content": Object {
                "backgroundColor": "red",
              },
              "contentCenter": Object {
                "backgroundColor": "blue",
              },
              "contentLeft": Object {
                "height": 48,
                "width": 48,
              },
              "contentRight": Object {
                "height": 48,
                "width": 48,
              },
              "subTitle": Object {
                "color": "#000",
              },
              "title": Object {
                "color": "yellow",
              },
              "valueText": Object {
                "color": "pink",
              },
            },
            "subTitle": "subTitle_1",
            "title": "title_1",
          },
        ],
        "title": "Section Title",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  headerStyle={null}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  renderSectionFooter={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [
          Object {
            "Icon": <Image
              source={1}
              style={Object {}}
            />,
            "onPress": [MockFunction],
            "styles": Object {
              "container": Object {
                "height": 64,
              },
              "content": Object {
                "backgroundColor": "red",
              },
              "contentCenter": Object {
                "backgroundColor": "blue",
              },
              "contentLeft": Object {
                "height": 48,
                "width": 48,
              },
              "contentRight": Object {
                "height": 48,
                "width": 48,
              },
              "subTitle": Object {
                "color": "#000",
              },
              "title": Object {
                "color": "yellow",
              },
              "valueText": Object {
                "color": "pink",
              },
            },
            "subTitle": "subTitle_1",
            "title": "title_1",
          },
        ],
        "title": "Section Title",
      },
    ]
  }
  stickyHeaderIndices={Array []}
  stickySectionHeadersEnabled={false}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#c8c8c8",
              "fontSize": 24,
              "marginBottom": 12,
              "marginLeft": 24,
            },
            null,
          ]
        }
      >
        Section Title
      </Text>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "height": 64,
            "minHeight": 96,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "flexDirection": "row",
                "paddingHorizontal": 32,
              },
              Object {
                "backgroundColor": "red",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "marginRight": 24,
                },
                Object {
                  "height": 48,
                  "width": 48,
                },
              ]
            }
          >
            <Image
              source={1}
              style={Object {}}
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "blue",
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#22242C",
                    "fontSize": 28,
                  },
                  Object {
                    "color": "yellow",
                  },
                ]
              }
            >
              title_1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#A2A3AA",
                    "fontSize": 24,
                  },
                  Object {
                    "color": "#000",
                  },
                ]
              }
            >
              subTitle_1
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 48,
                "opacity": 1,
                "width": 48,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 32,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Component should able to use SectionList props 1`] = `
<RCTScrollView
  ItemSeparatorComponent={undefined}
  ListHeaderComponent={<View />}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "Action": [Function],
            "key": 1,
            "title": "title_1",
            "value": "1",
          },
        ],
        "title": "Section Title",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  headerStyle={null}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  renderSectionFooter={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [
          Object {
            "Action": [Function],
            "key": 1,
            "title": "title_1",
            "value": "1",
          },
        ],
        "title": "Section Title",
      },
    ]
  }
  stickyHeaderIndices={Array []}
  stickySectionHeadersEnabled={false}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#c8c8c8",
              "fontSize": 24,
              "marginBottom": 12,
              "marginLeft": 24,
            },
            null,
          ]
        }
      >
        Section Title
      </Text>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "minHeight": 96,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "flexDirection": "row",
                "paddingHorizontal": 32,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#22242C",
                    "fontSize": 28,
                  },
                  undefined,
                ]
              }
            >
              title_1
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#999",
                      "fontSize": 28,
                      "marginRight": 12,
                    },
                    undefined,
                  ]
                }
              >
                1
              </Text>
              <View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                >
                  Action
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 32,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Component should not render SectionHeader without title 1`] = `
<RCTScrollView
  ItemSeparatorComponent={undefined}
  ListHeaderComponent={<View />}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "data": Array [],
        "title": null,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  headerStyle={null}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  renderSectionFooter={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [],
        "title": null,
      },
    ]
  }
  stickyHeaderIndices={Array []}
  stickySectionHeadersEnabled={false}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 32,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Component should render with SwitchButton 1`] = `
<RCTScrollView
  ItemSeparatorComponent={undefined}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": 1,
            "title": "title_1",
            "value": true,
          },
          Object {
            "key": 2,
            "title": "title_2",
            "value": true,
          },
        ],
        "title": "Section Title 1",
      },
      Object {
        "data": Array [
          Object {
            "key": 1,
            "title": "title_1",
            "value": true,
          },
          Object {
            "key": 2,
            "title": "title_2",
            "value": true,
          },
        ],
        "title": "Section Title 2",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  headerStyle={null}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  renderSectionFooter={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [
          Object {
            "key": 1,
            "title": "title_1",
            "value": true,
          },
          Object {
            "key": 2,
            "title": "title_2",
            "value": true,
          },
        ],
        "title": "Section Title 1",
      },
      Object {
        "data": Array [
          Object {
            "key": 1,
            "title": "title_1",
            "value": true,
          },
          Object {
            "key": 2,
            "title": "title_2",
            "value": true,
          },
        ],
        "title": "Section Title 2",
      },
    ]
  }
  stickyHeaderIndices={Array []}
  stickySectionHeadersEnabled={false}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#c8c8c8",
              "fontSize": 24,
              "marginBottom": 12,
              "marginLeft": 24,
            },
            null,
          ]
        }
      >
        Section Title 1
      </Text>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "minHeight": 96,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "paddingHorizontal": 32,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#22242C",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
              >
                title_1
              </Text>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    undefined,
                    false,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#44DB5E",
                      "borderColor": "#44DB5E",
                      "borderRadius": 16,
                      "height": 32,
                      "justifyContent": "center",
                      "opacity": 1,
                      "width": 52,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "borderRadius": 14,
                        "height": 28,
                        "left": 22,
                        "position": "absolute",
                        "width": 28,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#eee",
                "height": 0.5,
              },
              null,
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "minHeight": 96,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "flexDirection": "row",
                "paddingHorizontal": 32,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#22242C",
                    "fontSize": 28,
                  },
                  undefined,
                ]
              }
            >
              title_2
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#44DB5E",
                    "borderColor": "#44DB5E",
                    "borderRadius": 16,
                    "height": 32,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 52,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "borderRadius": 14,
                      "height": 28,
                      "left": 22,
                      "position": "absolute",
                      "width": 28,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 32,
          }
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#c8c8c8",
              "fontSize": 24,
              "marginBottom": 12,
              "marginLeft": 24,
            },
            null,
          ]
        }
      >
        Section Title 2
      </Text>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "minHeight": 96,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "paddingHorizontal": 32,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#22242C",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
              >
                title_1
              </Text>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    undefined,
                    false,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#44DB5E",
                      "borderColor": "#44DB5E",
                      "borderRadius": 16,
                      "height": 32,
                      "justifyContent": "center",
                      "opacity": 1,
                      "width": 52,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "borderRadius": 14,
                        "height": 28,
                        "left": 22,
                        "position": "absolute",
                        "width": 28,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#eee",
                "height": 0.5,
              },
              null,
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "minHeight": 96,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "flexDirection": "row",
                "paddingHorizontal": 32,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#22242C",
                    "fontSize": 28,
                  },
                  undefined,
                ]
              }
            >
              title_2
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#44DB5E",
                    "borderColor": "#44DB5E",
                    "borderRadius": 16,
                    "height": 32,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 52,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "borderRadius": 14,
                      "height": 28,
                      "left": 22,
                      "position": "absolute",
                      "width": 28,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 32,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Component should render with custom item 1`] = `
<RCTScrollView
  ItemSeparatorComponent={undefined}
  contentContainerStyle={
    Array [
      Object {
        "backgroundColor": "#f8f8f8",
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": 1,
            "renderItem": null,
            "title": "title_1",
            "value": true,
          },
          Object {
            "key": 2,
            "renderItem": null,
            "title": "title_2",
            "value": true,
          },
          Object {
            "key": 3,
            "renderItem": [Function],
            "title": "title_3",
            "value": true,
          },
        ],
        "title": "Section Title",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  headerStyle={null}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  renderSectionFooter={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [
          Object {
            "key": 1,
            "renderItem": null,
            "title": "title_1",
            "value": true,
          },
          Object {
            "key": 2,
            "renderItem": null,
            "title": "title_2",
            "value": true,
          },
          Object {
            "key": 3,
            "renderItem": [Function],
            "title": "title_3",
            "value": true,
          },
        ],
        "title": "Section Title",
      },
    ]
  }
  stickyHeaderIndices={Array []}
  stickySectionHeadersEnabled={false}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#c8c8c8",
              "fontSize": 24,
              "marginBottom": 12,
              "marginLeft": 24,
            },
            null,
          ]
        }
      >
        Section Title
      </Text>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "minHeight": 96,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "paddingHorizontal": 32,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#22242C",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
              >
                title_1
              </Text>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    undefined,
                    false,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#44DB5E",
                      "borderColor": "#44DB5E",
                      "borderRadius": 16,
                      "height": 32,
                      "justifyContent": "center",
                      "opacity": 1,
                      "width": 52,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "borderRadius": 14,
                        "height": 28,
                        "left": 22,
                        "position": "absolute",
                        "width": 28,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#eee",
                "height": 0.5,
              },
              null,
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#fff",
              "minHeight": 96,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "paddingHorizontal": 32,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#22242C",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
              >
                title_2
              </Text>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    undefined,
                    false,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#44DB5E",
                      "borderColor": "#44DB5E",
                      "borderRadius": 16,
                      "height": 32,
                      "justifyContent": "center",
                      "opacity": 1,
                      "width": 52,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "borderRadius": 14,
                        "height": 28,
                        "left": 22,
                        "position": "absolute",
                        "width": 28,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#eee",
                "height": 0.5,
              },
              null,
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          custom item
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 32,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;
