import{NativeModules,DeviceEventEmitter,NativeAppEventEmitter,Platform,AlertIOS}from"react-native";import{EventEmitter}from"events";const INTERNAL_EVENT_TYPE=["error","newListener","removeListener","dpDataChange","deviceChanged","bluetoothChange","deviceStateChange","networkStateChange","linkageTimeUpdate","deviceLocalStateChange"],sucStyle="background: green; color: #fff;",errStyle="background: red; color: #fff;";let _TYAppNative,_TYDeviceDevice;const loop=()=>{},type=e=>Object.prototype.toString.call(e).slice(8,-1).toLowerCase(),parseJson=str=>{let result;if(str&&"string"===type(str))try{result=JSON.parse(str)}catch(parseError){try{result=eval(`(${str})`)}catch(e){result=str}}else result=void 0===str?{}:str;return result},formatValue=(e,t)=>{if("string"===type(e)){if("true"===e)return!0;if("false"===e)return!1}else if("undefined"===type(e))switch(t.type){case"bool":return!1;case"value":return t.min;default:return""}return e},isNumerical=e=>"[object Number]"===Object.prototype.toString.call(e),camelize=e=>isNumerical(e)?`${e}`:(e=e.replace(/[\-_\s]+(.)?/g,(e,t)=>t?t.toUpperCase():"")).substr(0,1).toLowerCase()+e.substr(1),getBitValue=(e,t)=>(e&1<<t)>>t,isEmptyObj=e=>0===Object.keys(e).length&&e.constructor===Object,formatDevJSON=e=>{let t,i,o,a,n,c;const s=e,{dps:v}=s,r=parseJson(s.schema);s.schema={},s.codeIds={},s.idCodes={},s.state={};for(const e in r)t=(i=r[e]).code,o=`${i.id}`,a=parseJson(i.property),i.dptype=i.type,(i=Object.assign({},i,a)).id=o,s.codeIds[t]=o,s.idCodes[o]=t,n=formatValue(v[o],i),s.state[t]=n,s.schema[t]=i,delete i.property;if(s.panelConfig){c=Object.assign({},s.panelConfig);for(const e in c)s.panelConfig[e]="string"==typeof c[e]?parseJson(c[e]):c[e]}else s.panelConfig={};return s},formatUiConfig=e=>{let t=e.uiConfig?{...e.uiConfig}:{};if(Object.keys(e.schema).forEach(i=>{const o=e.schema[i],a=`dp_${o.code}`,n=camelize(a);switch(t[n]={key:n,strKey:a.toLowerCase(),code:o.code,attr:{},attri:{}},o.type){case"enum":o.range.forEach(e=>{const i=`${a}_${e}`.toLowerCase();t[n].attr[e]=i,t[n].attri[i]=e});break;case"bool":const e=`${a}_on`.toLowerCase(),i=`${a}_off`.toLowerCase();t[n].attr={false:i,true:e},t[n].attri={[`${a}_off`.toLowerCase()]:!1,[`${a}_on`.toLowerCase()]:!0};break;case"bitmap":for(const e of o.label){const i=`${a}_${e}`.toLowerCase();t[n].attr[e]=i,t[n].attri[i]=e}}}),!e.panelConfig||!e.panelConfig.bic)return t;const{bic:i,fun:o}=e.panelConfig;if(i)for(const e in i){const o=camelize(`panel_${i[e].code}`);!0===i[e].selected?t[o]=!i[e].value||parseJSON(i[e].value):t[o]=!1}if(o)for(const e in o){const i=camelize(`panel_fun_${e}`);t[i]=o[e]}return t};let AppDeviceEventEmitter={};const Event={},Device={},App={};let Native={},apiRequest;const TYDeviceData={};let TYMobileData={};if(NativeModules){_TYAppNative=NativeModules.TYRCTPublicModule||NativeModules.TYRCTPublicManager,_TYDeviceDevice=NativeModules.TYRCTDeviceModule||NativeModules.TYRCTPanelManager,AppDeviceEventEmitter=Platform.select({ios:()=>NativeAppEventEmitter,android:()=>DeviceEventEmitter})();const e=new EventEmitter;e.setMaxListeners(0);const t=["on","once","emit"];if(t.forEach(t=>{Event[t]=e[t].bind(e)}),Event.fire=e.emit.bind(e),Event.remove=e.removeListener.bind(e),Event.off=function(t){1===arguments.length&&e.removeAllListeners(t),2===arguments.length&&e.removeListener(t,arguments[1])},_TYAppNative&&_TYDeviceDevice){if(TYDeviceData.gState={},TYDeviceData.uiConfig={},Native={..._TYAppNative,..._TYDeviceDevice},TYDeviceData.devInfo={},App.mobileInfo=_TYAppNative.mobileInfo,Device.formatDps=(e=>TYDeviceData.devInfo&&TYDeviceData.devInfo.idCodes?Object.keys(e).reduce((t,i)=>{const o=TYDeviceData.devInfo.idCodes[i];return{...t,[o]:e[i]}},{}):{}),Device.setState=((e,t)=>{const i={};if("object"===type(e)){for(let t in e){if(!Device.checkDpExist(t))return void console.log("1-----参数错误");i[t=/^\d+$/.test(t)?Device.getDpCodeById(t):t]=e[t]}if(!isEmptyObj(i)){TYDeviceData.devInfo.state={...TYDeviceData.devInfo.state,...i};for(const e in i)-1===INTERNAL_EVENT_TYPE.indexOf(e)?Object.prototype.hasOwnProperty.call(i,e)&&Event.emit(e,i):console.warn(`DP Code can not be one of [${INTERNAL_EVENT_TYPE}]`)}}else if(Device.checkDpExist(e)){const o=/^\d+$/.test(e)?Device.getDpCodeById(e):e;i[o]=t,isEmptyObj(i)||(TYDeviceData.devInfo.state={...TYDeviceData.devInfo.state,...i},Event.emit(o,i))}else console.log("2-----参数错误");return i}),Device.checkDpExist=(e=>Device.getDpIdByCode(e)||Device.getDpCodeById(e)),Device.setDevState=(e=>(TYDeviceData.devInfo={...TYDeviceData.devInfo,...e},TYDeviceData.devInfo)),Device.getDeviceInfo=(()=>new Promise(e=>{TYDeviceData.devInfo?e(TYDeviceData.devInfo):Device.initDevice().then(t=>{e(t)})})),Device.initDevice=(()=>Promise.all([new Promise(e=>_TYDeviceDevice.getDevInfo({},t=>e(t))),App.getNetworkState()]).then(e=>{const t="undefined"===type(e[1].type)?e[1]:e[1].type;return Device.setDeviceInfo({networkType:t,...e[0]}),TYDeviceData.devInfo})),Device.setDeviceInfo=(e=>{if(e.devId){const t=e;t.deviceOnline=e.isOnline,delete t.isOnline;const i=formatDevJSON({appOnline:"NONE"!==e.networkType,...t});TYDeviceData.uiConfig=formatUiConfig(i),i.isVDevice=e.devId&&0===e.devId.indexOf("vdev"),TYDeviceData.devInfo=i}else TYDeviceData.uiConfig={},TYDeviceData.devInfo={}}),Device.getDpIdByCode=(e=>{if(TYDeviceData.devInfo){const{codeIds:t}=TYDeviceData.devInfo;return t[e]}console.log("-----未初始化,getDpIdByCode")}),Device.getDpCodeById=(e=>{if(TYDeviceData.devInfo){const{idCodes:t}=TYDeviceData.devInfo;return t[e]}console.log("-----未初始化,getDpCodeById")}),Device.getDpCodes=(()=>{if(TYDeviceData.devInfo){const{idCodes:e}=TYDeviceData.devInfo;return Object.keys(e)}return console.log("-----未初始化,getDpCodes"),[]}),Device.isShareDevice=(()=>TYDeviceData.devInfo?!!TYDeviceData.devInfo.isShare:(console.log("-----未初始化,isShareDevice"),!0)),Device.getDpSchema=(e=>{if(TYDeviceData.devInfo)return e?TYDeviceData.devInfo.schema[e]:TYDeviceData.devInfo.schema;console.log("-----未初始化,getDpSchema")}),Device.getState=(e=>{if(!isEmptyObj(TYDeviceData.devInfo))return e?Device.checkDpExist(e)?(/^\d+$/.test(e)&&(e=Device.getDpCodeById(e)),TYDeviceData.devInfo.state[e]):void console.log("3-----参数错误"):(void 0===TYDeviceData.devInfo.state&&(TYDeviceData.devInfo.state={}),TYDeviceData.devInfo.state);console.log("-----未初始化,devInfo getState")}),Device.setGState=((e,t)=>{let i={};return"object"===type(e)?i=e:i[e]=t,TYDeviceData.gState={...TYDeviceData.gState,...i},i}),Device.getGState=(e=>e?TYDeviceData.gState[e]:TYDeviceData.gState),Device.checkDpValueType=((e,t)=>{if(TYDeviceData.devInfo){if(Device.checkDpExist(e)){return/^\d+$/.test(e)&&(e=Device.getDpCodeById(e)),t===Device.getDpSchema()[e].schemaType}}else console.log("-----未初始化,checkDpValueType")}),Device.getDpDataFromDevice=(e=>(console.log("-----主动查询DP",e),new Promise((t,i)=>{let o,a=`${e}`;if(!Device.checkDpExist(a))return o={ret:"param error"},void Event.emit("message",o);/^\d+$/.test(a)||(a=Device.getDpIdByCode(e));const n=e=>{Event.emit("message",e)};if(Device.isMeshDevice())return _TYDeviceDevice.getDpDataFromMeshDevice({dpIds:[a]},n);_TYDeviceDevice.getDpDataFromDevice({dpId:a},loop,e=>{Event.emit("message",e)})}))),Device.putDeviceData=(e=>new Promise((t,i)=>{const{option:o,...a}=e;let n,c=!0;const s={};for(const e in a)if(Device.checkDpExist(e)){s[/^\d+$/.test(e)?e:Device.getDpIdByCode(e)]=a[e],c=!1}if(c)return i(n={error:"param error"}),void Event.emit("message",n);__DEV__&&console.log("-----数据下发",e,s),_TYDeviceDevice.putDpData({command:s,option:"undefined"===type(o)?3:o},()=>t({success:!0}),e=>{console.log("-----返回结果错误?",e),i(e),Event.emit("message",e)})})),Device.putLocalDpData=(e=>new Promise((t,i)=>{const{option:o,...a}=e;let n,c=!0;const s={},v=[];for(let e in a)if(Device.checkDpExist(e)){const t=e;/^\d+$/.test(e)||(e=Device.getDpIdByCode(t)),s[e]=a[t],c=!1,v.push(t)}if(c)return i(n={ret:"param error"}),void Event.emit("message",n);console.log("-----数据下发",e,s),_TYDeviceDevice.putLocalDpData({command:s,option:void 0===o?3:o},()=>t(),e=>{console.log("-----返回结果错误?",e),i(e),Event.emit("message",e)})})),Device.isMeshWifiDevice=(()=>{if(!TYDeviceData.devInfo)throw new Error("Device uninitialized");const{pcc:e}=TYDeviceData.devInfo;return void 0!==e?"0108"===e:e}),Device.isMeshDevice=(()=>{if(!TYDeviceData.devInfo)throw new Error("Device uninitialized");const{capability:e=0}=TYDeviceData.devInfo;return 1===getBitValue(e,11)}),Device.isSigMeshDevice=(()=>{if(!TYDeviceData.devInfo)throw new Error("Device uninitialized");const{capability:e=0}=TYDeviceData.devInfo;return 1===getBitValue(e,15)}),Device.isWifiDevice=(()=>{if(!TYDeviceData.devInfo)throw new Error("Device uninitialized");const{capability:e=0}=TYDeviceData.devInfo;return 1===e}),Device.isBleDevice=(()=>{if(!TYDeviceData.devInfo)throw new Error("Device uninitialized");const{capability:e=0}=TYDeviceData.devInfo;return 1===getBitValue(e,10)||1===getBitValue(e,11)||1===getBitValue(e,15)}),Device.isLocalLAN=(()=>{if(!TYDeviceData.devInfo)throw new Error("Device uninitialized");const{attribute:e=0}=TYDeviceData.devInfo;return 1===getBitValue(e,6)}),Device.showDeviceMenu=function(){return _TYDeviceDevice.showDeviceMenu()},Device.getBleManagerState=(()=>new Promise((e,t)=>{(_TYDeviceDevice.getBleManagerState||function(){t()})(i=>{if(i)return e(i.state);t()})})),Device.getBluetoothState=(()=>new Promise((e,t)=>{((NativeModules.TYRCTBluetoothUtilManager||{}).getBluetoothState||function(){t(null)})(i=>{if(i)return e(i.state);t(null)})})),Device.gotoDeviceWifiNetworkMonitor=_TYDeviceDevice.gotoDeviceWifiNetworkMonitor||function(){},Device.gotoBlePermissions=_TYDeviceDevice.gotoBlePermissions||function(){},Device.deleteDeviceInfo=(()=>new Promise((e,t)=>{(_TYDeviceDevice.deleteDeviceInfo||function(){t()})(e,t)})),TYDeviceData.panelInfo&&TYDeviceData.panelInfo.isVDevice&&(Device.putDpData=(e=>new Promise((t,i)=>{if(!TYDeviceData.devInfo)return void i();const o={};for(const t in e)if(Device.checkDpExist(t)){let i=t;/^\d+$/.test(i)&&(i=Device.getDpCodeById(t)),o[i]=e[t]}console.log("-----putDpData-mock",o),Device.setState(o),Event.emit("dpDataChange",o),t(o)})),Device.getDpDataFromDevice=(e=>new Promise((t,i)=>{if(!TYDeviceData.devInfo)return void i();const o={};if(Device.checkDpExist(e)){let t=e;/^\d+$/.test(e)&&(t=Device.getDpCodeById(e)),o[t]=Device.getState(t)}console.log("-----getDpDataFromDevice-mock",o),Device.setState(o),Event.emit("dpDataChange",o),t(o)})),Device.gotoDpAlarm=(()=>{console.log("-----gotoDpAlarm-mock"),Event.emit("message","expDevice")}),Device.setDevProperty=((e,t,i)=>{console.log("-----setDevProperty-mock"),i()}),Device.getDevProperty=(e=>{console.log("-----getDevProperty-mock"),e({})})),AppDeviceEventEmitter.addListener("dpDataChange",e=>{if(isEmptyObj(TYDeviceData.devInfo))TYDeviceData.__unInitializeDps={...TYDeviceData.__unInitializeDps,...e};else{const t=Device.formatDps(e);isEmptyObj(t)||(__DEV__&&console.log("-----数据上报",t,e),Device.setState(t),Event.emit("deviceDataChange",{type:"dpData",payload:t}))}}),AppDeviceEventEmitter.addListener("deviceChanged",()=>{__DEV__&&console.warn("deviceChanged"),Device.initDevice().then(e=>Event.emit("deviceDataChange",{type:"devInfo",payload:e}))}),AppDeviceEventEmitter.addListener("bluetoothChange",e=>{Event.emit("bluetoothChange",e.state)}),AppDeviceEventEmitter.addListener("bluetoothStateChanged",e=>{Event.emit("bluetoothStateChanged",e.state)}),AppDeviceEventEmitter.addListener("deviceStateChange",e=>{__DEV__&&console.warn("deviceStateChange"),void 0!==e&&void 0!==e.state&&Event.emit("deviceDataChange",{type:"deviceOnline",payload:{deviceOnline:e.state}})}),AppDeviceEventEmitter.addListener("networkStateChange",e=>{__DEV__&&console.warn("networkStateChange"),void 0!==e&&void 0!==e.state&&Event.emit("networkStateChange",{appOnline:e.state})}),AppDeviceEventEmitter.addListener("linkageTimeUpdate",()=>{Event.emit("linkageTimeUpdate",{})}),AppDeviceEventEmitter.addListener("deviceLocalStateChange",e=>{void 0!==e&&void 0!==e.state&&Event.emit("deviceLocalStateChange",{state:e.state})}),App={debounce(e,t,i){let o,a,n,c,s;const v=function(){const r=Date.now()-c;r<t&&r>0?o=setTimeout(v,t-r):(o=null,i||(s=e.apply(n,a),o||(n=a=null)))},r=function(){n=this,a=arguments,c=Date.now();const r=i&&!o;return o||(o=setTimeout(v,t)),r&&(s=e.apply(n,a),n=a=null),s};return r.cancel=function(){clearTimeout(o),o=n=a=null},r},throttle(e,t,i){let o,a,n,c=null,s=0;i||(i={});const v=function(){s=!1===i.leading?0:Date.now(),c=null,n=e.apply(o,a),c||(o=a=null)},r=function(){const r=Date.now();s||!1!==i.leading||(s=r);const D=t-(r-s);return o=this,a=arguments,D<=0||D>t?(clearTimeout(c),c=null,s=r,n=e.apply(o,a),c||(o=a=null)):c||!1===i.trailing||(c=setTimeout(v,D)),n};return r.cancel=function(){clearTimeout(c),s=0,c=o=a=null},r}},App.getWiFiSsid=(()=>new Promise(e=>{_TYAppNative.getWiFiSsid(t=>{e(t)})})),App.getNetworkState=(()=>new Promise(e=>{_TYAppNative.getNetworkType(t=>{e(t)})})),App.is24Hour=(()=>new Promise(e=>{_TYAppNative.is24Hour(t=>e(t))})),App.verSupported=(e=>!!(_TYAppNative&&_TYAppNative.mobileInfo&&_TYAppNative.mobileInfo.appRnVersion)&&_TYAppNative.mobileInfo.appRnVersion>=e),App.getMobileInfo=(()=>new Promise((e,t)=>{TYMobileData?t():_TYAppNative.getMobileInfo(t=>e(t))}).then(e=>TYMobileData=e,()=>TYMobileData)),App.jumpTo=(e=>{_TYAppNative.jumpTo(e||"")}),App.showLoading=(e=>{_TYAppNative.showLoading({title:e||""})}),App.hideLoading=(()=>{_TYAppNative.hideLoading()}),App.back=(()=>{_TYAppNative.back()}),App.disablePopGesture=(()=>{"ios"===Platform.OS&&_TYDeviceDevice.disablePopGesture()}),App.enablePopGesture=function(){"ios"===Platform.OS&&_TYDeviceDevice.enablePopGesture()},App.showPromptDialog=((e,t,i,o,a,n,c)=>{if("ios"===Platform.OS)try{AlertIOS.prompt(i,o,[{text:e,onPress:e=>n(e),style:"default"},{text:t,onPress:()=>c(),style:"cancel"}],"plain-text",a)}catch(e){}else _TYAppNative.showPromptDialog(i,o,a,n,c)}),App.bottomListDialog=((e,t,i)=>{_TYAppNative.bottomListDialog(e,t,i)}),App.showEditDialog=((e,t,i,o)=>{_TYAppNative.showEditDialog(e,t,i,o)}),App.simpleConfirmDialog=((e,t,i,o)=>{_TYAppNative.simpleConfirmDialog(e,t,i,o)}),App.simpleTipDialog=((e,t)=>{_TYAppNative.simpleTipDialog(e,t)}),App.shareMsg=(e=>{_TYAppNative.shareMsg(e)}),App&&NativeModules){const e=NativeModules.TYRCTNavManager,t=App.verSupported(5.23)&&e,i="message";class o{constructor(){this.emitter=null,this.subscription=null}createEmitter(){t?this.emitter=new NativeEventEmitter(NativeModules.TYRCTNavManager):console.log("-----AppRnVersion must >= 5.23")}addListener(e){t?this.emitter&&(this.subscription=this.emitter.addListener("receiveBroadcast",e)):console.log("-----AppRnVersion must >= 5.23")}removeEmitter(){t?this.subscription&&this.subscription.remove():console.log("-----AppRnVersion must >= 5.23")}registerEventListener(){t?e.broadcastReceiverRegister(i):console.log("-----AppRnVersion must >= 5.23")}sendEvent(o){t?e.broadcastMessage(i,o):console.log("-----AppRnVersion must >= 5.23")}pushWithUiID(i,o){t?e.pushWithUIID(i,o):console.log("-----AppRnVersion must >= 5.23")}}const a=new o;App.jumpSubPage=((e,t)=>{const{uiId:i}=e;a.pushWithUiID(i,t)})}apiRequest=((e,t,i="1.0")=>new Promise((o,a)=>{_TYDeviceDevice.apiRNRequest({a:e,postData:t,v:i},t=>{const i=parseJson(t);console.log(`API Success: %c${e}%o`,sucStyle,i),o(i)},t=>{const i=parseJson(t);console.log(`API Failed: %c${e}%o`,errStyle,i.message||i.errorMsg||i),a(i)})}))}}const TySdk={mobile:App,device:Device,apiRequest:apiRequest,native:Native,event:Event,DeviceEventEmitter:AppDeviceEventEmitter,Navigator:{},applyNavigator:e=>{TySdk.Navigator=e}};export default TySdk;